{"version":3,"sources":["utils.js","components/map/index.js","components/sidebar/index.js","components/sidebar/component.js","layers.js","App.js","serviceWorker.js","index.js"],"names":["dateDiffInDays","startDate","endDate","a","Date","b","utc1","UTC","getFullYear","getMonth","getDate","utc2","Math","floor","getDayRange","params","minDate","maxDate","minDateTime","maxDateTime","numberOfDays","startDateTime","endDateTime","activeStartDay","activeEndDay","startDayIndex","endDayIndex","getParams","config","defaultParams","reduce","acc","v","key","value","default","newParams","trimEndDate","maxAbsoluteDate","start","end","trim","startYear","moment","year","startMonth","month","startDay","dayOfYear","endYear","endMonth","endDay","trimEndYear","trimEndMonth","trimEndDay","DEFAULT_VIEWPORT","zoom","lat","lng","Map","events","state","viewport","props","flying","loaded","onLoad","bounds","setState","isEmpty","bbox","fitBounds","map","mapContainer","onViewportChange","i","onResize","newViewport","onMoveEnd","bearing","getBearing","pitch","getPitch","getZoom","getCenter","latitude","longitude","options","width","offsetWidth","height","offsetHeight","WebMercatorViewport","transitionDuration","transitionInterruption","TRANSITION_EVENTS","UPDATE","setTimeout","prevProps","prevViewport","prevBounds","this","stateViewport","isEqual","customClass","children","dragPan","getCursor","dragRotate","scrollZoom","touchZoom","touchRotate","doubleClickZoom","mapboxProps","ref","r","className","classnames","getMap","transitionInterpolator","FlyToInterpolator","transitionEasing","easeCubic","Component","defaultProps","isHovering","isDragging","SidebarComponent","React","id","name","type","source","tiles","minzoom","maxzoom","legendConfig","items","color","enabled","decodeConfig","required","timelineConfig","step","speed","interval","dateFormat","canPlay","railStyle","background","trackStyle","decodeFunction","provider","account","layers","cartocss","cartocss_version","sql","render","paint","paramsConfig","data","metadata","position","App","useState","DEFAULT_LAYERS","setLayers","JSON","stringify","layersJson","setLayersJson","layersSettings","setLayersSettings","layerGroups","l","sqlConfig","lSettings","sqlParams","decodeParams","timelineParams","slug","dataset","active","onChangeVisibility","visibility","onChangeOpacity","opacity","onChangeLayerDate","dates","layer","mode","theme","onChange","json","newLayers","parse","e","tabSize","wrapEnabled","showPrintMargin","editorProps","$blockScrolling","debounceChangePeriod","mapboxApiAccessToken","process","minZoom","plugin","PluginMapboxGl","providers","layerModel","resolve","reject","fetch","url","then","response","omit","features","rows","properties","geometry","coordinates","lon","catch","maxHeight","collapsable","sortable","onChangeOrder","ids","console","log","layerGroup","index","toolbar","handleStyle","defaultStyles","backgroundColor","borderRadius","boxShadow","border","zIndex","dotStyle","handleChange","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ccd26913.chunk.js","sourcesContent":["import moment from 'moment';\n\nconst MS_PER_DAY = 1000 * 60 * 60 * 24;\n\n// a and b are javascript Date objects\nexport const dateDiffInDays = (startDate, endDate) => {\n  const a = new Date(endDate);\n  const b = new Date(startDate);\n  // Discard the time and time-zone information.\n  const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\n  const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\n\n  return Math.floor((utc2 - utc1) / MS_PER_DAY);\n};\n\nexport const getDayRange = (params = {}) => {\n  const { startDate, endDate, minDate, maxDate } = params || {};\n\n  if (!startDate || !endDate || !minDate || !maxDate) return null;\n\n  const minDateTime = new Date(minDate);\n  const maxDateTime = new Date(maxDate);\n  const numberOfDays = dateDiffInDays(maxDateTime, minDateTime);\n\n  // timeline or hover effect active range\n  const startDateTime = new Date(startDate);\n  const endDateTime = new Date(endDate);\n  const activeStartDay = numberOfDays - dateDiffInDays(maxDateTime, startDateTime);\n  const activeEndDay = numberOfDays - dateDiffInDays(maxDateTime, endDateTime);\n\n  // get start and end day\n  const startDayIndex = activeStartDay || 0;\n  const endDayIndex = activeEndDay || numberOfDays;\n\n  return {\n    startDayIndex,\n    endDayIndex,\n    numberOfDays\n  };\n};\n\nexport const getParams = (config = [], params = {}) => {\n  const defaultParams = config.reduce((acc, v) => {\n    const key = v.key;\n    const value = v.default;\n\n    return {\n      ...acc,\n      [key]: value\n    };\n  }, {});\n\n  const newParams = {\n    ...defaultParams,\n    ...params\n  };\n\n  const { startDate, endDate, trimEndDate, maxAbsoluteDate } = newParams;\n\n  const start = startDate;\n  const end = endDate > maxAbsoluteDate ? maxAbsoluteDate : endDate;\n  const trim = trimEndDate > maxAbsoluteDate ? maxAbsoluteDate : trimEndDate;\n\n  return {\n    ...newParams,\n    ...(!!start && {\n      startYear: moment(start).year(),\n      startMonth: moment(start).month(),\n      startDay: moment(start).dayOfYear()\n    }),\n    ...(!!endDate && {\n      endYear: moment(end).year(),\n      endMonth: moment(end).month(),\n      endDay: moment(end).dayOfYear()\n    }),\n    ...(!!trimEndDate && {\n      trimEndYear: moment(trim).year(),\n      trimEndMonth: moment(trim).month(),\n      trimEndDay: moment(trim).dayOfYear()\n    }),\n    ...getDayRange(newParams)\n  };\n};\n","import React, { Component } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport isEqual from 'lodash/isEqual';\nimport isEmpty from 'lodash/isEmpty';\n\nimport ReactMapGL, { FlyToInterpolator, TRANSITION_EVENTS } from 'react-map-gl';\nimport WebMercatorViewport from 'viewport-mercator-project';\n\nimport { easeCubic } from 'd3-ease';\n\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport './styles.scss';\n\nconst DEFAULT_VIEWPORT = {\n  zoom: 2,\n  lat: 0,\n  lng: 0\n}\n\nclass Map extends Component {\n  events = {}\n\n  static propTypes = {\n    /** A function that returns the map instance */\n    children: PropTypes.func,\n\n    /** Custom css class for styling */\n    customClass: PropTypes.string,\n\n    /** An object that defines the viewport\n     * @see https://uber.github.io/react-map-gl/#/Documentation/api-reference/interactive-map?section=initialization\n    */\n    viewport: PropTypes.shape({\n\n    }),\n\n    /** An object that defines the bounds */\n    bounds: PropTypes.shape({\n      bbox: PropTypes.array,\n      options: PropTypes.shape({})\n    }),\n\n    /** A boolean that allows panning */\n    dragPan: PropTypes.bool,\n\n    /** A boolean that allows rotating */\n    dragRotate: PropTypes.bool,\n\n    /** A boolean that allows zooming */\n    scrollZoom: PropTypes.bool,\n\n    /** A boolean that allows zooming */\n    touchZoom: PropTypes.bool,\n\n    /** A boolean that allows touch rotating */\n    touchRotate: PropTypes.bool,\n\n    /** A boolean that allows double click zooming */\n    doubleClickZoom: PropTypes.bool,\n\n    /** A function that exposes when the map is loaded. It returns and object with the `this.map` and `this.mapContainer` reference. */\n    onLoad: PropTypes.func,\n\n    /** A function that exposes the viewport */\n    onViewportChange: PropTypes.func,\n\n    /** A function that exposes the viewport */\n    getCursor: PropTypes.func\n  }\n\n  static defaultProps = {\n    children: null,\n    customClass: null,\n    viewport: DEFAULT_VIEWPORT,\n    bounds: {},\n    dragPan: true,\n    dragRotate: true,\n\n    onViewportChange: () => {},\n    onLoad: () => {},\n    getCursor: ({ isHovering, isDragging }) => {\n      if (isHovering) return 'pointer';\n      if (isDragging) return 'grabbing';\n      return 'grab';\n    }\n  }\n\n  state = {\n    viewport: {\n      ...DEFAULT_VIEWPORT,\n      ...this.props.viewport // eslint-disable-line\n    },\n    flying: false,\n    loaded: false\n  }\n\n  componentDidUpdate(prevProps) {\n    const { viewport: prevViewport, bounds: prevBounds } = prevProps;\n    const { viewport, bounds } = this.props;\n    const { viewport: stateViewport } = this.state;\n\n    if (!isEqual(viewport, prevViewport)) {\n      this.setState({ // eslint-disable-line\n        viewport: {\n          ...stateViewport,\n          ...viewport\n        }\n      });\n    }\n\n    if (!isEmpty(bounds) && !isEqual(bounds, prevBounds)) {\n      this.fitBounds();\n    }\n  }\n\n  onLoad = () => {\n    const { bounds, onLoad } = this.props;\n    this.setState({ loaded: true });\n\n    if (!isEmpty(bounds) && !!bounds.bbox) {\n      this.fitBounds();\n    }\n\n    onLoad({\n      map: this.map,\n      mapContainer: this.mapContainer\n    })\n  }\n\n  onViewportChange = (v, i) => {\n    const { onViewportChange } = this.props;\n\n    this.setState({ viewport: v });\n    onViewportChange(v);\n  }\n\n  onResize = (v) => {\n    const { onViewportChange } = this.props;\n    const { viewport } = this.state;\n    const newViewport = {\n      ...viewport,\n      ...v\n    };\n\n    this.setState({ viewport: newViewport });\n    onViewportChange(newViewport);\n  }\n\n  onMoveEnd = () => {\n    const { onViewportChange } = this.props;\n    const { viewport } = this.state;\n\n    if (this.map) {\n      const bearing = this.map.getBearing();\n      const pitch = this.map.getPitch();\n      const zoom = this.map.getZoom();\n      const { lng, lat } = this.map.getCenter();\n\n      const newViewport = {\n        ...viewport,\n        bearing,\n        pitch,\n        zoom,\n        latitude: lat,\n        longitude: lng\n      };\n\n      // Publish new viewport and save it into the state\n      this.setState({ viewport: newViewport });\n      onViewportChange(newViewport);\n    }\n  }\n\n  fitBounds = () => {\n    const { viewport } = this.state;\n    const { bounds, onViewportChange } = this.props;\n    const { bbox, options } = bounds;\n\n    const v = {\n      width: this.mapContainer.offsetWidth,\n      height: this.mapContainer.offsetHeight,\n      ...viewport\n    }\n\n    const { longitude, latitude, zoom } = new WebMercatorViewport(v).fitBounds(\n      [[bbox[0], bbox[1]], [bbox[2], bbox[3]]],\n      options\n    );\n\n    const newViewport = {\n      ...this.state.viewport,\n      longitude,\n      latitude,\n      zoom,\n      transitionDuration: 2500,\n      transitionInterruption: TRANSITION_EVENTS.UPDATE\n    }\n\n    this.setState({\n      flying: true,\n      viewport: newViewport\n    });\n    onViewportChange(newViewport);\n\n    setTimeout(() => {\n      this.setState({ flying: false });\n    }, 2500);\n  };\n\n  render() {\n    const { customClass, children, getCursor, dragPan, dragRotate, scrollZoom, touchZoom, touchRotate, doubleClickZoom, ...mapboxProps } = this.props;\n    const { viewport, loaded, flying } = this.state;\n\n    return (\n      <div\n        ref={r => { this.mapContainer = r}}\n        className={classnames({\n          \"c-map\": true,\n          [customClass]: !!customClass\n        })}\n      >\n        <ReactMapGL\n          ref={map => { this.map = map && map.getMap(); }}\n\n          // CUSTOM PROPS FROM REACT MAPBOX API\n          {...mapboxProps}\n\n          // VIEWPORT\n          {...viewport}\n          width=\"100%\"\n          height=\"100%\"\n\n          // INTERACTIVE\n          dragPan={!flying && dragPan}\n          dragRotate={!flying && dragRotate}\n          scrollZoom={!flying && scrollZoom}\n          touchZoom={!flying && touchZoom}\n          touchRotate={!flying && touchRotate}\n          doubleClickZoom={!flying && doubleClickZoom}\n\n          // DEFAULT FUNC IMPLEMENTATIONS\n          onViewportChange={this.onViewportChange}\n          onResize={this.onResize}\n          onLoad={this.onLoad}\n          // getCursor={getCursor}\n\n          transitionInterpolator={new FlyToInterpolator()}\n          transitionEasing={easeCubic}\n        >\n          {loaded && !!this.map && typeof children === 'function' && children(this.map)}\n        </ReactMapGL>\n      </div>\n    );\n  }\n}\n\nexport default Map;","import SidebarComponent from './component';\n\nexport default SidebarComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.scss';\n\nclass SidebarComponent extends React.Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired\n  };\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"c-sidebar\">\n        <div className=\"sidebar--scroll\">{children}</div>\n      </div>\n    );\n  }\n}\n\nexport default SidebarComponent;\n","export default [\n  // RASTER LAYER\n  {\n    id: 'gain',\n    name: 'Tree cover gain',\n    config: {\n      type: 'raster',\n      source: {\n        type: 'raster',\n        tiles: ['https://earthengine.google.org/static/hansen_2013/gain_alpha/{z}/{x}/{y}.png'],\n        minzoom: 3,\n        maxzoom: 12\n      }\n    },\n    legendConfig: {\n      type: 'basic',\n      items: [{ name: 'Tree cover gain', color: '#6D6DE5' }]\n    }\n  },\n\n  // DECODED RASTER LAYER\n  {\n    id: 'loss',\n    name: 'Tree cover loss',\n    config: {\n      type: 'raster',\n      source: {\n        type: 'raster',\n        tiles: [\n          'https://storage.googleapis.com/wri-public/Hansen_16/tiles/hansen_world/v1/tc30/{z}/{x}/{y}.png'\n        ],\n        minzoom: 3,\n        maxzoom: 12\n      }\n    },\n    legendConfig: {\n      enabled: true\n    },\n    decodeConfig: [\n      {\n        default: '2001-01-01',\n        key: 'startDate',\n        required: true\n      },\n      {\n        default: '2018-12-31',\n        key: 'endDate',\n        required: true\n      }\n    ],\n    timelineConfig: {\n      step: 1,\n      speed: 250,\n      interval: 'years',\n      dateFormat: 'YYYY',\n      trimEndDate: '2018-12-31',\n      maxDate: '2018-12-31',\n      minDate: '2001-01-01',\n      canPlay: true,\n      railStyle: {\n        background: '#DDD'\n      },\n      trackStyle: [\n        {\n          background: '#dc6c9a'\n        },\n        {\n          background: '#982d5f'\n        }\n      ]\n    },\n    decodeFunction: `\n      // values for creating power scale, domain (input), and range (output)\n      float domainMin = 0.;\n      float domainMax = 255.;\n      float rangeMin = 0.;\n      float rangeMax = 255.;\n\n      float exponent = zoom < 13. ? 0.3 + (zoom - 3.) / 20. : 1.;\n      float intensity = color.r * 255.;\n\n      // get the min, max, and current values on the power scale\n      float minPow = pow(domainMin, exponent - domainMin);\n      float maxPow = pow(domainMax, exponent);\n      float currentPow = pow(intensity, exponent);\n\n      // get intensity value mapped to range\n      float scaleIntensity = ((currentPow - minPow) / (maxPow - minPow) * (rangeMax - rangeMin)) + rangeMin;\n      // a value between 0 and 255\n      alpha = zoom < 13. ? scaleIntensity / 255. : color.g;\n\n      float year = 2000.0 + (color.b * 255.);\n      // map to years\n      if (year >= startYear && year <= endYear && year >= 2001.) {\n        color.r = 220. / 255.;\n        color.g = (72. - zoom + 102. - 3. * scaleIntensity / zoom) / 255.;\n        color.b = (33. - zoom + 153. - intensity / zoom) / 255.;\n      } else {\n        alpha = 0.;\n      }\n    `\n  },\n\n  // VECTOR - PROVIDER CARTO\n  {\n    id: 'protected-areas',\n    name: 'Protected areas',\n    config: {\n      type: 'vector',\n      source: {\n        type: 'vector',\n        provider: {\n          type: 'carto',\n          options: {\n            account: 'wri-01',\n            layers: [\n              {\n                options: {\n                  cartocss:\n                    '#wdpa_protected_areas {  polygon-opacity: 1.0; polygon-fill: #704489 }',\n                  cartocss_version: '2.3.0',\n                  sql: 'SELECT * FROM wdpa_protected_areas'\n                },\n                type: 'mapnik'\n              }\n            ]\n          }\n        }\n      },\n      render: {\n        layers: [\n          {\n            type: 'fill',\n            'source-layer': 'layer0',\n            paint: {\n              'fill-color': '#5ca2d1',\n              'fill-opacity': 1\n            }\n          },\n          {\n            type: 'line',\n            'source-layer': 'layer0',\n            paint: {\n              'line-color': '#000000',\n              'line-opacity': 0.1\n            }\n          }\n        ]\n      }\n    },\n    paramsConfig: [],\n    legendConfig: {\n      type: 'basic',\n      items: [{ name: 'Protected areas', color: '#5ca2d1' }]\n    }\n  },\n\n  // CUSTOM PROVIDER\n  {\n    id: 'mongabay-stories',\n    name: 'Mongabay stories',\n    config: {\n      type: 'geojson',\n      source: {\n        type: 'geojson',\n        data: 'https://wri-01.carto.com/api/v2/sql?q=SELECT%20*%20FROM%20mongabay&format=geojson'\n        // provider: {\n        //   type: 'carto-sql-points',\n        //   url: 'https://wri-01.carto.com/api/v2/sql?q=SELECT%20*%20FROM%20mongabay&format=geojson',\n        //   options: {}\n        // }\n      },\n      render: {\n        metadata: {\n          position: 'top'\n        },\n        layers: [\n          {\n            type: 'circle',\n            paint: {\n              'circle-color': [\n                'interpolate',\n                ['exponential', 0.5],\n                ['zoom'],\n                3,\n                '#e2714b',\n                6,\n                '#eee695'\n              ],\n              'circle-stroke-width': 1\n            },\n\n            // It will put the layer on the top\n            metadata: {\n              position: 'top'\n            }\n          }\n        ]\n      }\n    },\n    paramsConfig: [],\n    legendConfig: {\n      type: 'basic',\n      items: [{ name: 'Mongabay stories', color: '#FFCC00' }]\n    }\n  }\n];\n","import React, { useState } from 'react';\n\nimport omit from 'lodash/omit';\n\nimport { getParams } from './utils';\n\n// Components\nimport Map from 'components/map';\nimport Sidebar from 'components/sidebar';\nimport AceEditor from 'react-ace';\nimport 'ace-builds/src-noconflict/mode-json';\nimport 'ace-builds/src-noconflict/theme-github';\n\n// Layer manager\nimport { LayerManager, Layer } from 'layer-manager/dist/components';\nimport { PluginMapboxGl, fetch } from 'layer-manager';\n\n// Legend\nimport {\n  Icons,\n  Legend,\n  LegendListItem,\n  LegendItemTypes,\n  LegendItemTimeStep,\n  LegendItemToolbar,\n  LegendItemButtonOpacity,\n  LegendItemButtonVisibility\n} from 'vizzuality-components';\n\n// DATA\nimport DEFAULT_LAYERS from './layers';\n\nimport './App.scss';\n\nfunction App() {\n  const [layers, setLayers] = useState(DEFAULT_LAYERS);\n  const [layersJson, setLayersJson] = useState(JSON.stringify(DEFAULT_LAYERS, null, 2));\n  const [layersSettings, setLayersSettings] = useState({});\n\n  const layerGroups = layers.map(l => {\n    const { id, paramsConfig, sqlConfig, decodeConfig, timelineConfig } = l;\n    const lSettings = layersSettings[id] || {};\n\n    const params = !!paramsConfig && getParams(paramsConfig, lSettings.params);\n    const sqlParams = !!sqlConfig && getParams(sqlConfig, lSettings.sqlParams);\n    const decodeParams =\n      !!decodeConfig && getParams(decodeConfig, { ...timelineConfig, ...lSettings.decodeParams });\n    const timelineParams = !!timelineConfig && {\n      ...timelineConfig,\n      ...getParams(paramsConfig, lSettings.params),\n      ...getParams(decodeConfig, lSettings.decodeParams)\n    };\n\n    return {\n      id,\n      slug: id,\n      dataset: id,\n      layers: [\n        {\n          active: true,\n          ...l,\n          ...lSettings,\n          params,\n          sqlParams,\n          decodeParams,\n          timelineParams\n        }\n      ],\n      ...lSettings\n    };\n  });\n\n  const onChangeJson = json => {\n    setLayersJson(json);\n\n    try {\n      const newLayers = JSON.parse(json);\n      setLayers(newLayers);\n    } catch (e) {\n      // do nothing\n    }\n  };\n\n  const onChangeOrder = ids => {\n    console.log('onChangeOrder', ids);\n  };\n\n  const onChangeVisibility = (l, visibility) => {\n    setLayersSettings({\n      ...layersSettings,\n      [l.id]: {\n        ...layersSettings[l.id],\n        visibility\n      }\n    });\n  };\n\n  const onChangeOpacity = (l, opacity) => {\n    setLayersSettings({\n      ...layersSettings,\n      [l.id]: {\n        ...layersSettings[l.id],\n        opacity\n      }\n    });\n  };\n\n  const onChangeLayerDate = (dates, layer) => {\n    const { id, decodeConfig } = layer;\n\n    setLayersSettings({\n      ...layersSettings,\n      [id]: {\n        ...layersSettings[id],\n        ...(decodeConfig && {\n          decodeParams: {\n            startDate: dates[0],\n            endDate: dates[1],\n            trimEndDate: dates[2]\n          }\n        }),\n        ...(!decodeConfig && {\n          params: {\n            startDate: dates[0],\n            endDate: dates[1]\n          }\n        })\n      }\n    });\n  };\n\n  return (\n    <div className=\"c-app\">\n      <Icons />\n\n      <div className=\"c-main\">\n        <Sidebar>\n          <AceEditor\n            mode=\"json\"\n            theme=\"github\"\n            value={layersJson}\n            onChange={onChangeJson}\n            tabSize={2}\n            width=\"100%\"\n            height=\"100%\"\n            wrapEnabled\n            showPrintMargin={false}\n            editorProps={{ $blockScrolling: true }}\n            debounceChangePeriod={500}\n          />\n        </Sidebar>\n\n        <div className=\"c-map-container\">\n          <Map\n            mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n            // mapStyle=\"mapbox://styles/layer-manager/ck07vfinn01xm1co324q5vcdl\"\n            minZoom={2}\n          >\n            {map => (\n              <LayerManager\n                map={map}\n                plugin={PluginMapboxGl}\n                providers={{\n                  'carto-sql-points': (layerModel, layer, resolve, reject) => {\n                    const { source } = layerModel;\n                    const { provider } = source;\n\n                    fetch('get', provider.url, provider.options, layerModel)\n                      .then(response => {\n                        return resolve({\n                          ...layer,\n                          source: {\n                            ...omit(layer.source, 'provider'),\n                            data: {\n                              type: 'FeatureCollection',\n                              features: response.rows.map(r => ({\n                                type: 'Feature',\n                                properties: r,\n                                geometry: {\n                                  type: 'Point',\n                                  coordinates: [r.lon, r.lat]\n                                }\n                              }))\n                            }\n                          }\n                        });\n                      })\n                      .catch(e => {\n                        reject(e);\n                      });\n                  }\n                }}\n              >\n                {layers.map(layer => {\n                  const {\n                    id,\n                    paramsConfig,\n                    sqlConfig,\n                    decodeConfig,\n                    timelineConfig,\n                    decodeFunction\n                  } = layer;\n                  const lSettings = layersSettings[id] || {};\n\n                  const l = {\n                    ...layer,\n                    ...layer.config,\n                    ...lSettings,\n                    ...(!!paramsConfig && {\n                      params: getParams(paramsConfig, { ...lSettings.params })\n                    }),\n\n                    ...(!!sqlConfig && {\n                      sqlParams: getParams(sqlConfig, { ...lSettings.sqlParams })\n                    }),\n\n                    ...(!!decodeConfig && {\n                      decodeParams: getParams(decodeConfig, {\n                        ...timelineConfig,\n                        ...lSettings.decodeParams\n                      }),\n                      decodeFunction\n                    })\n                  };\n\n                  return <Layer key={layer.id} {...l} />;\n                })}\n              </LayerManager>\n            )}\n          </Map>\n\n          <div className=\"c-legend\">\n            <Legend\n              maxHeight={'65vh'}\n              collapsable={false}\n              sortable={false}\n              onChangeOrder={onChangeOrder}\n            >\n              {layerGroups.map((layerGroup, i) => {\n                return (\n                  <LegendListItem\n                    index={i}\n                    key={layerGroup.slug}\n                    layerGroup={layerGroup}\n                    toolbar={\n                      <LegendItemToolbar>\n                        <LegendItemButtonOpacity\n                          trackStyle={{\n                            background: '#FFCC00'\n                          }}\n                          handleStyle={{\n                            background: '#FFCC00'\n                          }}\n                        />\n                        <LegendItemButtonVisibility />\n                      </LegendItemToolbar>\n                    }\n                    onChangeVisibility={onChangeVisibility}\n                    onChangeOpacity={onChangeOpacity}\n                  >\n                    <LegendItemTypes />\n\n                    <LegendItemTimeStep\n                      defaultStyles={{\n                        handleStyle: {\n                          backgroundColor: 'white',\n                          borderRadius: '50%',\n                          boxShadow: '0 1px 2px 0 rgba(0, 0, 0, 0.29)',\n                          border: '0px',\n                          zIndex: 2\n                        },\n                        railStyle: { backgroundColor: '#d6d6d9' },\n                        dotStyle: { visibility: 'hidden', border: '0px' }\n                      }}\n                      handleChange={onChangeLayerDate}\n                    />\n                  </LegendListItem>\n                );\n              })}\n            </Legend>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './styles/index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}